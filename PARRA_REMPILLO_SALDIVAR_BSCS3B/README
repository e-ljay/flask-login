# Project Name
User-Authentication system

## Overview

This project is a web-based Access Control System built using Python and Flask. The application offers features such as user registration, login functionality, profile management, and role-based access control. It distinguishes between two roles: admin and user. Admins can manage users, including assigning roles, while security measures like password hashing and session management ensure a safe user experience. Additionally, the system includes a backup feature that allows database backups to be stored with timestamps for easy recovery.

## Features
- User authentication with Flask-Login.
- Admin role management for assigning user roles.
- Profile management (update username, password, profile picture).
- Database backups (manual triggers for admins).

## Requirements
- Python 3.x
- Flask
- Flask-SQLAlchemy
- Flask-Login
- Werkzeug

## Setup Instructions

1. Clone the repository:
    ```bash
    git clone https://github.com/your-repo/project-name.git
    cd project-name
    ```

2. Create a virtual environment:
    ```bash
    python -m venv venv
    ```

3. Activate the virtual environment:
    - On Windows: `venv\Scripts\activate`
    - On macOS/Linux: `source venv/bin/activate`

4. Install dependencies:
    ```bash
    pip install -r requirements.txt
    ```

5. Run the app:
    ```bash
    python app.py
    ```

## Usage

- Visit `http://127.0.0.1:5000` in your browser.
- Register a new account or log in with existing credentials.

## Security Features
- Passwords are hashed using `werkzeug.security`.
- Secure file uploads with file validation.

## License
Include your project's license if applicable.
